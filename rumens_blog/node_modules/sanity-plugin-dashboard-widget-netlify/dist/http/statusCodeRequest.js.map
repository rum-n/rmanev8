{"version":3,"sources":["../../src/http/statusCodeRequest.ts"],"names":["statusCodeRequest","input","init","Observable","subscriber","controller","onResponse","res","next","complete","onError","err","name","error","fetch","signal","then","status","Error","statusText","abort"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEO,IAAMA,iBAAiB,GAAG,CAACC,KAAD,EAAqBC,IAArB,KAAgE;AAC/F,SAAO,IAAIC,gBAAJ,CAAgBC,UAAD,IAAgB;AACpC,QAAMC,UAAU,GAAG,mDAAnB;;AACA,QAAMC,UAAU,GAAIC,GAAD,IAAiB;AAClCH,MAAAA,UAAU,CAACI,IAAX,CAAgBD,GAAhB;AACAH,MAAAA,UAAU,CAACK,QAAX;AACD,KAHD;;AAIA,QAAMC,OAAO,GAAIC,GAAD,IAAgB;AAC9B,UAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BR,QAAAA,UAAU,CAACK,QAAX;AACD,OAFD,MAEO;AACLL,QAAAA,UAAU,CAACS,KAAX,CAAiBF,GAAjB;AACD;AACF,KAND;;AAQAG,IAAAA,KAAK,CAACb,KAAD,kCAAYC,IAAZ;AAAkBa,MAAAA,MAAM,EAAEV,UAAU,CAACU;AAArC,OAAL,CACGC,IADH,CACST,GAAD,IAAmB;AACvB,UAAIA,GAAG,CAACU,MAAJ,GAAa,GAAb,IAAoBV,GAAG,CAACU,MAAJ,GAAa,GAArC,EAA0C;AACxC,cAAM,IAAIC,KAAJ,sBAAwBX,GAAG,CAACU,MAA5B,eAAuCV,GAAG,CAACY,UAA3C,EAAN;AACD;;AACD,aAAOZ,GAAG,CAACU,MAAX;AACD,KANH,EAOGD,IAPH,CAOQV,UAPR,EAOoBI,OAPpB;AASA,WAAO,MAAM;AACXL,MAAAA,UAAU,CAACe,KAAX;AACD,KAFD;AAGD,GA1BM,CAAP;AA2BD,CA5BM","sourcesContent":["import {Observable} from 'rxjs'\nimport {createAbortController} from './utils/createAbortController'\n\nexport const statusCodeRequest = (input: RequestInfo, init?: RequestInit): Observable<number> => {\n  return new Observable((subscriber) => {\n    const controller = createAbortController()\n    const onResponse = (res: number) => {\n      subscriber.next(res)\n      subscriber.complete()\n    }\n    const onError = (err: Error) => {\n      if (err.name === 'AbortError') {\n        subscriber.complete()\n      } else {\n        subscriber.error(err)\n      }\n    }\n\n    fetch(input, {...init, signal: controller.signal})\n      .then((res: Response) => {\n        if (res.status < 200 || res.status > 299) {\n          throw new Error(`HTTP Error ${res.status}: ${res.statusText}`)\n        }\n        return res.status\n      })\n      .then(onResponse, onError)\n\n    return () => {\n      controller.abort()\n    }\n  })\n}\n"],"file":"statusCodeRequest.js"}