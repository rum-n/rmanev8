{"version":3,"sources":["../../../src/components/SiteItem/index.tsx"],"names":["IMAGE_PULL_INTERVAL","getImageUrl","siteId","baseUrl","time","Date","getTime","useBadgeImage","src","setSrc","update","interval","window","setInterval","clearInterval","useDeploy","site","onDeploy","updateBadge","timeoutRef","clearTimeout","current","setTimeout","SiteItem","props","id","title","url","adminUrl","buildHookId","badge","handleDeploy","styles","root","status","actions"],"mappings":"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","sourcesContent":["import React, {FunctionComponent, useCallback, useEffect, useRef, useState} from 'react'\n\nimport DefaultButton from 'part:@sanity/components/buttons/default'\n\nimport styles from './SiteItem.css'\nimport {DeployAction, Site} from '../../types'\nimport Links from './Links'\n\ninterface Props {\n  site: Site\n  onDeploy: DeployAction\n}\n\nexport const IMAGE_PULL_INTERVAL = 10000\n\nconst getImageUrl = (siteId: string) => {\n  const baseUrl = `https://api.netlify.com/api/v1/badges/${siteId}/deploy-status`\n  const time = new Date().getTime()\n\n  return `${baseUrl}?${time}`\n}\n\nconst useBadgeImage = (siteId: string) => {\n  const [src, setSrc] = useState(() => getImageUrl(siteId))\n  const update = useCallback(() => setSrc(getImageUrl(siteId)), [siteId])\n\n  useEffect(() => {\n    const interval = window.setInterval(update, IMAGE_PULL_INTERVAL)\n    return () => window.clearInterval(interval)\n  }, [update])\n\n  return [src, update] as const\n}\n\nconst useDeploy = (site: Site, onDeploy: DeployAction, updateBadge: () => void) => {\n  const timeoutRef = useRef(-1)\n  useEffect(() => () => window.clearTimeout(timeoutRef.current), [])\n\n  return useCallback(() => {\n    onDeploy(site)\n    timeoutRef.current = window.setTimeout(updateBadge, 1000)\n  }, [site, onDeploy, updateBadge])\n}\n\nconst SiteItem: FunctionComponent<Props> = (props) => {\n  const {site, onDeploy} = props\n  const {id, title, url, adminUrl, buildHookId} = site\n\n  const [badge, updateBadge] = useBadgeImage(id)\n  const handleDeploy = useDeploy(site, onDeploy, updateBadge)\n\n  return (\n    <li className={styles.root}>\n      <div className={styles.status}>\n        <h4 className={styles.title}>\n          {title}\n          <Links url={url} adminUrl={adminUrl} />\n        </h4>\n\n        <div>\n          <img src={badge} alt=\"Badge\" />\n        </div>\n      </div>\n\n      {buildHookId ? (\n        <div className={styles.actions}>\n          <DefaultButton inverted onClick={handleDeploy}>\n            Deploy\n          </DefaultButton>\n        </div>\n      ) : null}\n    </li>\n  )\n}\n\nexport default SiteItem\n"],"file":"index.js"}