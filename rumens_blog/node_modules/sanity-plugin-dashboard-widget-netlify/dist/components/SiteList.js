"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _spinner = _interopRequireDefault(require("part:@sanity/components/loading/spinner"));

var _react = _interopRequireDefault(require("react"));

var _NetlifyWidget = _interopRequireDefault(require("./NetlifyWidget.css"));

var _SiteItem = _interopRequireDefault(require("./SiteItem"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class SiteList extends _react.default.Component {
  render() {
    var _this$props = this.props,
        isLoading = _this$props.isLoading,
        onDeploy = _this$props.onDeploy,
        sites = _this$props.sites;

    if (isLoading) {
      return /*#__PURE__*/_react.default.createElement(_spinner.default, {
        center: true,
        message: "Loading sites\u2026"
      });
    }

    if (!sites || sites && sites.length === 0) {
      return /*#__PURE__*/_react.default.createElement("div", {
        className: _NetlifyWidget.default.error
      }, "No sites are defined in the widget options. Please check your config.");
    }

    return /*#__PURE__*/_react.default.createElement("ul", {
      className: _NetlifyWidget.default.sites
    }, sites.map((site, index) => {
      return /*#__PURE__*/_react.default.createElement(_SiteItem.default, {
        onDeploy: onDeploy,
        site: site,
        key: "site-".concat(index)
      });
    }));
  }

}

exports.default = SiteList;
//# sourceMappingURL=SiteList.js.map